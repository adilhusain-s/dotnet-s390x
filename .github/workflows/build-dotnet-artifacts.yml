

name: Build Dotnet Artifacts

on:
  workflow_dispatch:
    inputs:
      dotnet_version:
        description: 'Dotnet version to build'
        required: true
        default: '10.0.100-preview.4.25258.110'
      arch:
        description: 'Architecture to build for (e.g., ppc64le, s390x, x64)'
        required: false
        default: 'ppc64le'

permissions:
  packages: read
  contents: write

jobs:
  build-toolchain-image:
    runs-on: ubuntu-latest
    env:
      ARCH: ${{ github.event.inputs.arch || 'ppc64le' }}
    outputs:
      image-tag: ${{ steps.set-tag.outputs.image_tag }}
    steps:
      - name: Checkout dotnet-s390x
        uses: actions/checkout@v4
      - name: Set image tag
        id: set-tag
        run: echo "image_tag=dotnet-toolchain:${ARCH}" >> $GITHUB_OUTPUT
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build local toolchain Docker image (with GitHub Actions cache backend)
        run: |
          deb_arch="$ARCH"
          gnu_arch="$ARCH"
          if [ "$ARCH" = "ppc64le" ]; then
            deb_arch="ppc64el"
            gnu_arch="powerpc64le"
          fi
          docker buildx build \
            --build-arg ARCH=${ARCH} \
            --build-arg deb_arch=${deb_arch} \
            --build-arg gnu_arch=${gnu_arch} \
            --tag dotnet-toolchain:${ARCH} \
            --cache-from=type=gha \
            --cache-to=type=gha,mode=max \
            --output type=docker,dest=dotnet-toolchain-${ARCH}.tar \
            -f docker/image/Dockerfile docker/image
      - name: Upload toolchain Docker image artifact
        uses: actions/upload-artifact@v4
        with:
          name: dotnet-toolchain-image-${{ env.ARCH }}
          path: dotnet-toolchain-${{ env.ARCH }}.tar

  sdk:
    needs: build-toolchain-image
    runs-on: ubuntu-latest
    env:
      DOTNET_VERSION: ${{ github.event.inputs.dotnet_version || '10.0.100-preview.4.25258.110' }}
      ARCH: ${{ github.event.inputs.arch || 'ppc64le' }}
    steps:
      - name: Show free disk space
        run: df -h
      - name: Free some disk space
        run: rm -rf /opt/hostedtoolcache
      - name: Show free disk space (after cleanup)
        run: df -h
      - name: Configure git
        run: |
          git config --global user.email iii@linux.ibm.com
          git config --global user.name "dotnet-s390x bot"
      - name: Checkout dotnet-s390x
        uses: actions/checkout@v4
      - name: Download toolchain Docker image artifact
        uses: actions/download-artifact@v4
        with:
          name: dotnet-toolchain-image-dotnet-toolchain:${{ env.ARCH }}
      - name: Load toolchain Docker image
        run: |
          docker load -i dotnet-toolchain-dotnet-toolchain:${{ env.ARCH }}.tar
      - name: Prepare (sdk)
        run: ./dotnet-prepare sdk
      - name: Build sdk
        run: |
          ARCH=${{ env.ARCH }} DOTNET_VERSION=${{ env.DOTNET_VERSION }} ./docker/run-image dotnet-toolchain:${{ env.ARCH }} ./dotnet-build sdk
      - name: Upload SDK Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: sdk-${{ env.ARCH }}-${{ env.DOTNET_VERSION }}
          path: |
            local-downloads/
            local-packages/
            output/

  runtime:
    needs: [build-toolchain-image, sdk]
    runs-on: ubuntu-latest
    env:
      DOTNET_VERSION: ${{ github.event.inputs.dotnet_version || '10.0.100-preview.4.25258.110' }}
      ARCH: ${{ github.event.inputs.arch || 'ppc64le' }}
    steps:
      - name: Show free disk space
        run: df -h
      - name: Free some disk space
        run: rm -rf /opt/hostedtoolcache
      - name: Show free disk space (after cleanup)
        run: df -h
      - name: Configure git
        run: |
          git config --global user.email iii@linux.ibm.com
          git config --global user.name "dotnet-s390x bot"
      - name: Checkout dotnet-s390x
        uses: actions/checkout@v4
      - name: Download toolchain Docker image artifact
        uses: actions/download-artifact@v4
        with:
          name: dotnet-toolchain-image-dotnet-toolchain:${{ env.ARCH }}
      - name: Load toolchain Docker image
        run: |
          docker load -i dotnet-toolchain-dotnet-toolchain:${{ env.ARCH }}.tar
      - name: Prepare (runtime)
        run: ./dotnet-prepare runtime
      - name: Build runtime
        run: |
          ARCH=${{ env.ARCH }} DOTNET_VERSION=${{ env.DOTNET_VERSION }} ./docker/run-image dotnet-toolchain:${{ env.ARCH }} ./dotnet-build runtime
      - name: Upload Runtime Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: runtime-${{ env.ARCH }}-${{ env.DOTNET_VERSION }}
          path: |
            local-downloads/
            local-packages/
            output/

  msbuild:
    needs: runtime
    runs-on: ubuntu-latest
    env:
      DOTNET_VERSION: ${{ github.event.inputs.dotnet_version || '10.0.100-preview.4.25258.110' }}
      ARCH: ${{ github.event.inputs.arch || 'ppc64le' }}
    steps:
      - name: Show free disk space
        run: df -h
      - name: Free some disk space
        run: rm -rf /opt/hostedtoolcache
      - name: Show free disk space (after cleanup)
        run: df -h
      - name: Configure git
        run: |
          git config --global user.email iii@linux.ibm.com
          git config --global user.name "dotnet-s390x bot"
      - name: Checkout dotnet-s390x
        uses: actions/checkout@v4
      - name: Download runtime artifacts
        uses: actions/download-artifact@v4
        with:
          name: runtime-${{ env.ARCH }}-${{ env.DOTNET_VERSION }}
      - name: Download toolchain Docker image artifact
        uses: actions/download-artifact@v4
        with:
          name: dotnet-toolchain-image-dotnet-toolchain:${{ env.ARCH }}
      - name: Load toolchain Docker image
        run: |
          docker load -i dotnet-toolchain-dotnet-toolchain:${{ env.ARCH }}.tar
      - name: Prepare (msbuild)
        run: ./dotnet-prepare msbuild
      - name: Build msbuild
        run: |
          ARCH=${{ env.ARCH }} DOTNET_VERSION=${{ env.DOTNET_VERSION }} ./docker/run-image dotnet-toolchain:${{ env.ARCH }} ./dotnet-build msbuild
      - name: Upload MSBuild Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: msbuild-${{ env.ARCH }}-${{ env.DOTNET_VERSION }}
          path: |
            local-downloads/
            local-packages/
            output/

  roslyn:
    needs: msbuild
    runs-on: ubuntu-latest
    env:
      DOTNET_VERSION: ${{ github.event.inputs.dotnet_version || '10.0.100-preview.4.25258.110' }}
      ARCH: ${{ github.event.inputs.arch || 'ppc64le' }}
    steps:
      - name: Show free disk space
        run: df -h
      - name: Free some disk space
        run: rm -rf /opt/hostedtoolcache
      - name: Show free disk space (after cleanup)
        run: df -h
      - name: Configure git
        run: |
          git config --global user.email iii@linux.ibm.com
          git config --global user.name "dotnet-s390x bot"
      - name: Checkout dotnet-s390x
        uses: actions/checkout@v4
      - name: Download msbuild artifacts
        uses: actions/download-artifact@v4
        with:
          name: msbuild-${{ env.ARCH }}-${{ env.DOTNET_VERSION }}
      - name: Download toolchain Docker image artifact
        uses: actions/download-artifact@v4
        with:
          name: dotnet-toolchain-image-dotnet-toolchain:${{ env.ARCH }}
      - name: Load toolchain Docker image
        run: |
          docker load -i dotnet-toolchain-dotnet-toolchain:${{ env.ARCH }}.tar
      - name: Prepare (roslyn)
        run: ./dotnet-prepare roslyn
      - name: Build roslyn
        run: |
          ARCH=${{ env.ARCH }} DOTNET_VERSION=${{ env.DOTNET_VERSION }} ./docker/run-image dotnet-toolchain:${{ env.ARCH }} ./dotnet-build roslyn
      - name: Upload Roslyn Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: roslyn-${{ env.ARCH }}-${{ env.DOTNET_VERSION }}
          path: |
            local-downloads/
            local-packages/
            output/

  aspnetcore:
    needs: roslyn
    runs-on: ubuntu-latest
    env:
      DOTNET_VERSION: ${{ github.event.inputs.dotnet_version || '10.0.100-preview.4.25258.110' }}
      ARCH: ${{ github.event.inputs.arch || 'ppc64le' }}
    steps:
      - name: Show free disk space
        run: df -h
      - name: Free some disk space
        run: rm -rf /opt/hostedtoolcache
      - name: Show free disk space (after cleanup)
        run: df -h
      - name: Configure git
        run: |
          git config --global user.email iii@linux.ibm.com
          git config --global user.name "dotnet-s390x bot"
      - name: Checkout dotnet-s390x
        uses: actions/checkout@v4
      - name: Download roslyn artifacts
        uses: actions/download-artifact@v4
        with:
          name: roslyn-${{ env.ARCH }}-${{ env.DOTNET_VERSION }}
      - name: Download toolchain Docker image artifact
        uses: actions/download-artifact@v4
        with:
          name: dotnet-toolchain-image-dotnet-toolchain:${{ env.ARCH }}
      - name: Load toolchain Docker image
        run: |
          docker load -i dotnet-toolchain-dotnet-toolchain:${{ env.ARCH }}.tar
      - name: Prepare (aspnetcore)
        run: ./dotnet-prepare aspnetcore
      - name: Build aspnetcore
        run: |
          ARCH=${{ env.ARCH }} DOTNET_VERSION=${{ env.DOTNET_VERSION }} ./docker/run-image dotnet-toolchain:${{ env.ARCH }} ./dotnet-build aspnetcore
      - name: Upload AspNetCore Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: aspnetcore-${{ env.ARCH }}-${{ env.DOTNET_VERSION }}
          path: |
            local-downloads/
            local-packages/
            output/

  release:
    needs: aspnetcore
    runs-on: ubuntu-latest
    env:
      DOTNET_VERSION: ${{ github.event.inputs.dotnet_version || '10.0.100-preview.4.25258.110' }}
      ARCH: ${{ github.event.inputs.arch || 'ppc64le' }}
    if: ${{ github.event_name == 'push' && github.ref_type == 'tag' }}
    steps:
      - name: Show free disk space
        run: df -h
      - name: Free some disk space
        run: rm -rf /opt/hostedtoolcache
      - name: Show free disk space (after cleanup)
        run: df -h
      - name: Configure git
        run: |
          git config --global user.email iii@linux.ibm.com
          git config --global user.name "dotnet-s390x bot"
      - name: Checkout dotnet-s390x
        uses: actions/checkout@v4
      - name: Download sdk artifacts
        uses: actions/download-artifact@v4
        with:
          name: sdk-${{ env.ARCH }}-${{ env.DOTNET_VERSION }}
      - name: Download runtime artifacts
        uses: actions/download-artifact@v4
        with:
          name: runtime-${{ env.ARCH }}-${{ env.DOTNET_VERSION }}
      - name: Download msbuild artifacts
        uses: actions/download-artifact@v4
        with:
          name: msbuild-${{ env.ARCH }}-${{ env.DOTNET_VERSION }}
      - name: Download roslyn artifacts
        uses: actions/download-artifact@v4
        with:
          name: roslyn-${{ env.ARCH }}-${{ env.DOTNET_VERSION }}
      - name: Download aspnetcore artifacts
        uses: actions/download-artifact@v4
        with:
          name: aspnetcore-${{ env.ARCH }}-${{ env.DOTNET_VERSION }}
      - name: Create a release
        run: gh release create --notes "" "${{ github.ref_name }}" output/*
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
